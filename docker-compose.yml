version: "2"
services:
    app:
        build: .
        depends_on: ['db']
        volumes:
            - .:/var/www
        tmpfs: /var/www/app/cache
        environment:
            - VIRTUAL_HOST=127.0.0.1
            - VIRTUAL_PORT=8080
    db:
        image: k0st/alpine-mariadb
        volumes:
            - ./app/cache/mysql:/var/lib/mysql
        environment:
            - MYSQL_DATABASE=slim_skeleton
            - MYSQL_USER=slim
            - MYSQL_PASSWORD=slim
            - MYSQL_RANDOM_ROOT_PASSWORD=1

    proxy:
        image: jwilder/nginx-proxy:alpine
        container_name: nginx-proxy
        labels:
            com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
        environment: ['DEFAULT_HOST=127.0.0.1']
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./docker/proxy/certs:/etc/nginx/certs:ro
            - ./docker/proxy/vhost.d:/etc/nginx/vhost.d
            - ./docker/proxy/html:/usr/share/nginx/html
            - /var/run/docker.sock:/tmp/docker.sock:ro
    ssl_companion:
        image: jrcs/letsencrypt-nginx-proxy-companion
        volumes:
            - ./docker/proxy/certs:/etc/nginx/certs
            - ./docker/proxy/vhost.d:/etc/nginx/vhost.d
            - ./docker/proxy/html:/usr/share/nginx/html
            - /var/run/docker.sock:/var/run/docker.sock:ro
        depends_on: ['proxy']
    update:
        image: composer/composer:alpine
        command: ["update", "--ignore-platform-reqs", "--no-ansi", "--no-dev", "--no-interaction", "--no-progress", "--no-scripts", "--optimize-autoloader", "-d", "/app"]
        volumes:
          - ./:/app
